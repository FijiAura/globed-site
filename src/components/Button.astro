---
const { link, style, solidWidth } = Astro.props;
const urlBase = import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL.slice(0, -1) : import.meta.env.BASE_URL;
const url = link.startsWith('https') || link.startsWith('#') ? link : `${urlBase}${link}`;
const classList = `${style} ${Astro.slots.has('post-icon') ? 'has-post-icon' : ''} ${solidWidth === 'true' ? 'is-solid-width' : ''}`;
---

<a href={url} class={classList}>
    <slot name="pre-icon">{solidWidth === 'true' ? <span></span> : ''}</slot>
    <span class="content"><slot /></span>
    <slot name="post-icon" />
</a>

<style>
    a {
        @apply
            grid items-center justify-items-center
            text-accent-lightest font-body
            border-accent-lightest border-opacity-50 border-solid border-2 rounded-full
            sm:text-xl max-sm:text-lg
            sm:p-4 max-sm:p-3
            min-w-44
            transition-colors;
        
        grid-template-columns: 1.75rem 1fr;
    }
    a > .content {
        @apply
            px-4;
    }
    a.has-post-icon {
        grid-template-columns: 1fr 1.75rem;
    }
    a.is-solid-width {
        grid-template-columns: 1.75rem 7rem 1.75rem;
    }
    a:hover {
        @apply
            bg-tertiary-light
            border-tertiary-light
            text-tertiary-darkest
            cursor-pointer;
    }

    .alt:hover {
        @apply
            bg-quardiary-light
            border-quardiary-light
            text-quardiary-darkest;
    }
</style>
